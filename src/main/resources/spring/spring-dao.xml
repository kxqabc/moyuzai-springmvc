<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <!--spring读取properties文件中的数据，注意必须放在spring配置文件的前面，否则会报错！-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:redis.properties</value>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>

    <!-- MINA                                                         -->
    <!-- =============================================================== -->
    <!-- 构造属性编辑器 ，将String地址转换为SocketAddress对象 -->
    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <!--map中的key指遇到key的类型后自动转换为value类型的对象，
            在这里是指遇到"java.net.SocketAddress"类型的变量时要转换为
            "org.apache.mina.integration.beans.InetSocketAddressEditor"
            类型的对象-->
            <map>
                <entry key="java.net.SocketAddress" value="org.apache.mina.integration.beans.InetSocketAddressEditor" >
                </entry>
            </map>
        </property>
    </bean>
    <bean id="ioAcceptor" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"
          init-method="bind" destroy-method="unbind" scope="singleton">
        <property name="defaultLocalAddress" value=":8989" />
        <property name="handler" ref="sessionHander" />
        <property name="filterChainBuilder" ref="filterChainBuilder" />
        <property name="reuseAddress" value="true" />
    </bean>
    <!--mina的处理器-->
    <bean id="sessionHander" class="com.moyuzai.servlet.mina.core.ServerHandler" scope="singleton">
        <!--<property name="daoService" ref="daoServiceImpl"/>-->
    </bean>
    <!--mina过滤器-->
    <bean id="filterChainBuilder"
          class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder">
        <property name="filters">
            <map>
                <entry key="executor">
                    <bean class="org.apache.mina.filter.executor.ExecutorFilter" />
                </entry>
                <entry key="codec">
                    <bean class="org.apache.mina.filter.codec.ProtocolCodecFilter">
                        <constructor-arg>
                            <!--使用mina自带的过滤器，可序列化过滤器，可对象转换为字节-->
                            <!--<bean class="org.apache.mina.filter.codec.serialization.ObjectSerializationCodecFactory"></bean>-->
                            <bean class="com.moyuzai.servlet.mina.coder.MessageCodeFactory"/>
                            <!--<bean class="org.apache.mina.filter.codec.textline.TextLineCodecFactory" />-->
                        </constructor-arg>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>

    <!-- 配置整合mybatis过程 -->
    <!-- 1.配置数据库相关参数properties的属性：${url} -->
    <context:property-placeholder location="classpath:jdbc.properties" />

    <!-- 2.数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性 -->
        <property name="driverClass" value="${jdbc.driver}" />
        <!--在xml中,"&"要用"&amp;"代替,否则会显示错误!-->
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!-- c3p0连接池的私有属性 -->
        <property name="maxPoolSize" value="30" />
        <property name="minPoolSize" value="10" />
        <!-- 关闭连接后不自动commit -->
        <property name="autoCommitOnClose" value="false" />
        <!-- 获取连接超时时间 -->
        <property name="checkoutTimeout" value="10000" />
        <!-- 当获取连接失败重试次数 -->
        <property name="acquireRetryAttempts" value="2" />
    </bean>

    <!-- 3.配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource" />
        <!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <!-- 扫描entity包 使用别名 -->
        <property name="typeAliasesPackage" value="com.moyuzai.servlet.entity" />
        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml" />
    </bean>

    <!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="com.moyuzai.servlet.dao" />
    </bean>

    <!--配置jedis相关依赖-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property  name="maxTotal" value="${redis.maxActive}"/>
        <property  name="maxIdle" value="${redis.maxIdle}" />
        <property  name="maxWaitMillis" value="${redis.maxWaitMillis}" />
        <property  name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="close">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
        <constructor-arg name="host" value="${redis.servers}"/>
        <constructor-arg name="port" value="${redis.port}"/>
    </bean>



</beans>